1.适用场景

		If we have to change the behavior of an object based on its state, we can have a state variable in the Object. 
	Then use if-else condition block to perform different actions based on the state. State design pattern is used to provide a systematic and loosely coupled way to achieve this through Context and State implementations.
	
2.Benefits

	The benefits of using State pattern to implement polymorphic behavior is clearly visible. 
The chances of error are less and it’s very easy to add more states for additional behavior. 
Thus making our code more robust, easily maintainable and flexible. 
Also State pattern helped in avoiding if-else or switch-case conditional logic in this scenario.ul 
when we have multiple algorithms for specific task and we want our application to be flexible to chose any of the algorithm at runtime for specific task.